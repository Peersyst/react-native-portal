{"version":3,"names":["React","memo","useEffect","usePortalState","usePortal","PortalHostComponent","name","state","registerHost","deregisterHost","createElement","Fragment","map","item","node","PortalHost","displayName"],"sources":["PortalHost.tsx"],"sourcesContent":["import React, { memo, useEffect } from 'react';\nimport { usePortalState } from '../../hooks/usePortalState';\nimport { usePortal } from '../../hooks/usePortal';\nimport type { PortalHostProps } from './types';\n\nconst PortalHostComponent = ({ name }: PortalHostProps) => {\n  //#region hooks\n  const state = usePortalState(name);\n  const { registerHost, deregisterHost } = usePortal(name);\n  //#endregion\n\n  //#region effects\n  useEffect(() => {\n    registerHost();\n    return () => {\n      deregisterHost();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  //#endregion\n\n  //#region render\n  return <>{state.map(item => item.node)}</>;\n  //#endregion\n};\n\nexport const PortalHost = memo(PortalHostComponent);\nPortalHost.displayName = 'PortalHost';\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAC9C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,QAAQ,uBAAuB;AAGjD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAsB,CAAC,KAAK;EACzD;EACA,MAAMC,KAAK,GAAGJ,cAAc,CAACG,IAAI,CAAC;EAClC,MAAM;IAAEE,YAAY;IAAEC;EAAe,CAAC,GAAGL,SAAS,CAACE,IAAI,CAAC;EACxD;;EAEA;EACAJ,SAAS,CAAC,MAAM;IACdM,YAAY,CAAC,CAAC;IACd,OAAO,MAAM;MACXC,cAAc,CAAC,CAAC;IAClB,CAAC;IACD;EACF,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA;EACA,oBAAOT,KAAA,CAAAU,aAAA,CAAAV,KAAA,CAAAW,QAAA,QAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAI,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,gBAAGd,IAAI,CAACI,mBAAmB,CAAC;AACnDU,UAAU,CAACC,WAAW,GAAG,YAAY","ignoreList":[]}