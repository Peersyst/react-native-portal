{"version":3,"names":["ACTIONS","print","registerHost","state","hostName","deregisterHost","addUpdatePortal","portalName","node","index","findIndex","item","name","push","removePortal","component","reducer","method","params","splice","action","type","clonedState","REGISTER_HOST","DEREGISTER_HOST","ADD_UPDATE_PORTAL","REMOVE_PORTAL"],"sources":["reducer.ts"],"sourcesContent":["import { ACTIONS } from './constants';\nimport { print } from '../utilities/logger';\nimport type { PortalType } from '../types';\nimport type {\n  ActionTypes,\n  AddUpdatePortalAction,\n  RemovePortalAction,\n} from './types';\n\nconst registerHost = (\n  state: Record<string, Array<PortalType>>,\n  hostName: string\n) => {\n  if (!(hostName in state)) {\n    state[hostName] = [];\n  }\n  return state;\n};\n\nconst deregisterHost = (\n  state: Record<string, Array<PortalType>>,\n  hostName: string\n) => {\n  delete state[hostName];\n  return state;\n};\n\nconst addUpdatePortal = (\n  state: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string,\n  node: any\n) => {\n  if (!(hostName in state)) {\n    state = registerHost(state, hostName);\n  }\n\n  /**\n   * updated portal, if it was already added.\n   */\n  const index = state[hostName].findIndex(item => item.name === portalName);\n  if (index !== -1) {\n    state[hostName][index].node = node;\n  } else {\n    state[hostName].push({\n      name: portalName,\n      node,\n    });\n  }\n  return state;\n};\n\nconst removePortal = (\n  state: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string\n) => {\n  if (!(hostName in state)) {\n    print({\n      component: reducer.name,\n      method: removePortal.name,\n      params: `Failed to remove portal '${portalName}', '${hostName}' was not registered!`,\n    });\n    return state;\n  }\n\n  const index = state[hostName].findIndex(item => item.name === portalName);\n  if (index !== -1) state[hostName].splice(index, 1);\n  return state;\n};\n\nexport const reducer = (\n  state: Record<string, Array<PortalType>>,\n  action: ActionTypes\n) => {\n  const { type } = action;\n  let clonedState = { ...state };\n  switch (type) {\n    case ACTIONS.REGISTER_HOST:\n      return registerHost(clonedState, action.hostName);\n    case ACTIONS.DEREGISTER_HOST:\n      return deregisterHost(clonedState, action.hostName);\n    case ACTIONS.ADD_UPDATE_PORTAL:\n      return addUpdatePortal(\n        clonedState,\n        action.hostName,\n        (action as AddUpdatePortalAction).portalName,\n        (action as AddUpdatePortalAction).node\n      );\n    case ACTIONS.REMOVE_PORTAL:\n      return removePortal(\n        clonedState,\n        action.hostName,\n        (action as RemovePortalAction).portalName\n      );\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,KAAK,QAAQ,qBAAqB;AAQ3C,MAAMC,YAAY,GAAGA,CACnBC,KAAwC,EACxCC,QAAgB,KACb;EACH,IAAI,EAAEA,QAAQ,IAAID,KAAK,CAAC,EAAE;IACxBA,KAAK,CAACC,QAAQ,CAAC,GAAG,EAAE;EACtB;EACA,OAAOD,KAAK;AACd,CAAC;AAED,MAAME,cAAc,GAAGA,CACrBF,KAAwC,EACxCC,QAAgB,KACb;EACH,OAAOD,KAAK,CAACC,QAAQ,CAAC;EACtB,OAAOD,KAAK;AACd,CAAC;AAED,MAAMG,eAAe,GAAGA,CACtBH,KAAwC,EACxCC,QAAgB,EAChBG,UAAkB,EAClBC,IAAS,KACN;EACH,IAAI,EAAEJ,QAAQ,IAAID,KAAK,CAAC,EAAE;IACxBA,KAAK,GAAGD,YAAY,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACvC;;EAEA;AACF;AACA;EACE,MAAMK,KAAK,GAAGN,KAAK,CAACC,QAAQ,CAAC,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKL,UAAU,CAAC;EACzE,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBN,KAAK,CAACC,QAAQ,CAAC,CAACK,KAAK,CAAC,CAACD,IAAI,GAAGA,IAAI;EACpC,CAAC,MAAM;IACLL,KAAK,CAACC,QAAQ,CAAC,CAACS,IAAI,CAAC;MACnBD,IAAI,EAAEL,UAAU;MAChBC;IACF,CAAC,CAAC;EACJ;EACA,OAAOL,KAAK;AACd,CAAC;AAED,MAAMW,YAAY,GAAGA,CACnBX,KAAwC,EACxCC,QAAgB,EAChBG,UAAkB,KACf;EACH,IAAI,EAAEH,QAAQ,IAAID,KAAK,CAAC,EAAE;IACxBF,KAAK,CAAC;MACJc,SAAS,EAAEC,OAAO,CAACJ,IAAI;MACvBK,MAAM,EAAEH,YAAY,CAACF,IAAI;MACzBM,MAAM,EAAE,4BAA4BX,UAAU,OAAOH,QAAQ;IAC/D,CAAC,CAAC;IACF,OAAOD,KAAK;EACd;EAEA,MAAMM,KAAK,GAAGN,KAAK,CAACC,QAAQ,CAAC,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKL,UAAU,CAAC;EACzE,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAEN,KAAK,CAACC,QAAQ,CAAC,CAACe,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;EAClD,OAAON,KAAK;AACd,CAAC;AAED,OAAO,MAAMa,OAAO,GAAGA,CACrBb,KAAwC,EACxCiB,MAAmB,KAChB;EACH,MAAM;IAAEC;EAAK,CAAC,GAAGD,MAAM;EACvB,IAAIE,WAAW,GAAG;IAAE,GAAGnB;EAAM,CAAC;EAC9B,QAAQkB,IAAI;IACV,KAAKrB,OAAO,CAACuB,aAAa;MACxB,OAAOrB,YAAY,CAACoB,WAAW,EAAEF,MAAM,CAAChB,QAAQ,CAAC;IACnD,KAAKJ,OAAO,CAACwB,eAAe;MAC1B,OAAOnB,cAAc,CAACiB,WAAW,EAAEF,MAAM,CAAChB,QAAQ,CAAC;IACrD,KAAKJ,OAAO,CAACyB,iBAAiB;MAC5B,OAAOnB,eAAe,CACpBgB,WAAW,EACXF,MAAM,CAAChB,QAAQ,EACdgB,MAAM,CAA2Bb,UAAU,EAC3Ca,MAAM,CAA2BZ,IACpC,CAAC;IACH,KAAKR,OAAO,CAAC0B,aAAa;MACxB,OAAOZ,YAAY,CACjBQ,WAAW,EACXF,MAAM,CAAChB,QAAQ,EACdgB,MAAM,CAAwBb,UACjC,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC","ignoreList":[]}